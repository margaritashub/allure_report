{"name": "test_guest_can_register", "status": "failed", "statusDetails": {"message": "AssertionError: Successful registration message should be equal fo `Thanks for registering!`, but got `Спасибо за регистрацию!` instead\nassert 'Спасибо за регистрацию!' == 'Thanks for registering!'\n  - Спасибо за регистрацию!\n  + Thanks for registering!", "trace": "browser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"9935e859-0549-4847-b4e6-727138a6fc19\")>\n\n    def test_guest_can_register(browser):\n        link = \"http://selenium1py.pythonanywhere.com\"\n        browser.get(link)\n        rand_number = random.randint(1000000000, 10000000000)\n        email = f\"user_{str(time.time())}_{rand_number}@ran.dom\"\n        password = f\"pw{rand_number}\"\n        browser.find_element(By.CSS_SELECTOR, \"#login_link\").click()\n        browser.find_element(By.ID, \"id_registration-email\").send_keys(email)\n        browser.find_element(By.ID, \"id_registration-password1\").send_keys(password)\n        browser.find_element(By.ID, \"id_registration-password2\").send_keys(password)\n        browser.find_element(By.NAME, \"registration_submit\").click()\n    \n        expected_thanks_message = 'Thanks for registering!'\n        thanks_message = browser.find_element_by_css_selector('.alert-success .alertinner')\n        assert thanks_message.is_displayed(), 'Successful registration message should be visible'\n>       assert thanks_message.text == expected_thanks_message, \\\n            f\"Successful registration message should be equal fo `{expected_thanks_message}`, but got `{thanks_message.text}` instead\"\nE       AssertionError: Successful registration message should be equal fo `Thanks for registering!`, but got `Спасибо за регистрацию!` instead\nE       assert 'Спасибо за регистрацию!' == 'Thanks for registering!'\nE         - Спасибо за регистрацию!\nE         + Thanks for registering!\n\ntest_make_report.py:29: AssertionError"}, "start": 1584548627285, "stop": 1584548630721, "uuid": "71adc546-c117-4b3a-91f0-f222e11440db", "historyId": "627654877eac3a5215f30f43f67f668d", "testCaseId": "45947b58caa03f6c70d4ae5eb1d4609f", "fullName": "test_make_report#test_guest_can_register", "labels": [{"name": "suite", "value": "test_make_report"}, {"name": "host", "value": "Asus"}, {"name": "thread", "value": "23196-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_make_report"}]}